generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int      @id @default(autoincrement())
  name             String
  email            String   @unique
  password         String
  tempPassword     String?  // usada temporariamente em troca de senha
  cpf              String   @unique
  rg               String
  telefone         String
  endereco         String
  numero           String
  complemento      String?  // opcional
  cep              String
  role             Role     @default(RENTER)
  isVerified       Boolean  @default(false)
  verificationCode String?
  createdAt        DateTime @default(now())

  // Relacionamentos
  sentMessages     Message[]  @relation("Sender")
  receivedMessages Message[]  @relation("Receiver")
  properties       Property[] @relation("OwnerProperties")
  bookings         Booking[]
}

model Message {
  id         Int      @id @default(autoincrement())
  content    String
  createdAt  DateTime @default(now())
  senderId   Int
  sender     User     @relation("Sender", fields: [senderId], references: [id])
  receiverId Int
  receiver   User     @relation("Receiver", fields: [receiverId], references: [id])
}

model Property {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  price       Float
  location    String
  available   Boolean  @default(true)
  ownerId     Int
  owner       User     @relation("OwnerProperties", fields: [ownerId], references: [id])
  createdAt   DateTime @default(now())
  bookings    Booking[]
}

model Booking {
  id         Int      @id @default(autoincrement())
  property   Property @relation(fields: [propertyId], references: [id])
  propertyId Int
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  startDate  DateTime
  endDate    DateTime
  createdAt  DateTime @default(now())
}

enum Role {
  RENTER
  OWNER
  ADMIN
}
